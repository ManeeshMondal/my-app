{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","role","htmlFor","TextForm","useState","Text","setText","style","color","heading","value","backgroundColor","onChange","event","target","rows","newtext","toUpperCase","showAlert","toLowerCase","box","document","getElementById","select","navigator","clipboard","writeText","split","length","defaultProps","aboutText","Alert","alert","class","word","lower","charAt","slice","capitalize","msg","App","setmode","setalert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3f5c9a93.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n// import { Link } from 'react-router-dom'; \r\n// import { Route } from 'react-router-dom'; \r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <div>\r\n           <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n     <div className=\"container-fluid\">\r\n    {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>  */}\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n        </li> */}\r\n      </ul>\r\n      {/* <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form> */}\r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n        <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode} role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n        </div>\r\n    )\r\n}\r\nNavbar.propTypes={\r\n       title:PropTypes.string.isRequired,\r\n       aboutText : PropTypes.string\r\n       \r\n}\r\nNavbar.defaultProps={\r\n  aboutText :'Enter your text here'\r\n};","import React, { useState } from 'react';\r\n\r\nexport default function TextForm(props) {\r\n    // click of button for uppercase\r\n    const handelupclick=()=>{\r\n        //  console.log(\"Clicked\"+Text);\r\n          let newtext= Text.toUpperCase();\r\n         setText(newtext);\r\n         props.showAlert(\"converted to uppercase\",\"success\");\r\n    }\r\n    // click of button for lowercase\r\n    const handelloclick=()=>{\r\n        //  console.log(\"Clicked\"+Text);\r\n          let newtext= Text.toLowerCase();\r\n         setText(newtext);\r\n         props.showAlert(\"converted to lowercase\",\"success\");\r\n    }\r\n    // button for clrear text \r\n    const handelclrealick=()=>{\r\n        let newtext=' ';\r\n        setText(newtext);\r\n        props.showAlert(\"text cleared\",\"success\");\r\n    }\r\n    // update the form / taking input \r\n    const handelonchange=(event)=>{\r\n        // console.log(\"on change\"); \r\n        setText(event.target.value)\r\n    }\r\n    // Declare a new state variable, which we'll call \"count\";\r\n    const [Text, setText] = useState('')\r\n\r\n    // button for copy text \r\n    const handelCopy=()=>{\r\n       var box=document.getElementById(\"mybox\");\r\n       box.select();\r\n       navigator.clipboard.writeText(box.value);\r\n       props.showAlert(\"copied to clipboard\",\"success\");\r\n    }\r\n  return (\r\n<>\r\n<div>\r\n    <div className=\"mb-3\" style={{color: props.mode==='dark'?'white':'black'}} >\r\n        <h2>{props.heading}</h2>\r\n        <textarea className=\"form-control\" value={Text} style={{backgroundColor:props.mode==='dark'?'gray':'white',color:props.mode==='dark'?'white':'black'}} onChange={handelonchange} id=\"mybox\" rows=\"8\" ></textarea>\r\n    </div>\r\n    <button type=\"button\" className=\"btn btn-primary my-2 mx-1\" onClick={handelupclick}>Change to UpperCase</button>\r\n    <button type=\"button\" className=\"btn btn-primary my-2 mx-1\" onClick={handelloclick}>Change to LowerCase</button>\r\n    <button type=\"button\" className=\"btn btn-primary my-2 mx-1\" onClick={handelclrealick}>Clear Text</button>\r\n    <button type=\"button\" className=\"btn btn-primary my-2 mx-1\" onClick={handelCopy}>Copy Text</button>\r\n</div>\r\n<div className=\"containe my-5\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n    <h2>Your text summary </h2>\r\n    <p> {Text.split(\" \").length} Words ,{Text.length} characters <br /> \r\n        {.0008*Text.split(\" \").length} Minutes to Read..\r\n     </p>\r\n     <h2>Preview</h2>\r\n     <p>{Text.length>0?Text:\"Enter something in the textbox to preview it here\"}</p>   \r\n</div>\r\n</>\r\n  )\r\n}\r\n\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n  const capitalize=(word)=>{\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase()+ lower.slice(1);\r\n  }\r\n  return (\r\n    \r\n    props.alert&&<div class={`alert alert-${props.alert.type} alert-dismissible fade show ` }role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg} \r\n        </div>\r\n  )\r\n}\r\n\r\nexport default Alert","// import logo from './logo.svg'; \nimport './App.css';\n// import About from './components/About'; \nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm'; \nimport React ,{useState} from 'react';\nimport Alearts from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setmode] = useState('light');\n  const [alert, setalert] = useState(null);\n\n  // alerts settings \n  const showAlert=(message,type)=>{\n    setalert({\n      msg: message,\n      type: type\n      })\n    setTimeout(() => {\n      setalert(null);\n    }, 2000);\n\n  }\n  // light mode and dark mode enabling \n  const toggleMode=()=>{\n    if(mode==='light'){\n      setmode('dark');\n      document.body.style.backgroundColor='#042743';\n      showAlert(\"Dark mode has been enaled\",\"success\");\n    }\n    else{\n      setmode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"light mode has been enaled\",\"success\");\n    }\n  }\n\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar title=\"TextUtils\" aboutText=\"About Us\" mode={mode} toggleMode={toggleMode} />\n        <Alearts alert={alert}/>\n        <div className=\"container my-3\">\n        {/* <Switch>\n              <Route exact path=\"/about\">\n                <About/>\n              </Route>\n              <Route exact path=\"/\"> */}\n              <TextForm heading=\"Enter Your Text To Analyze\" mode={mode} showAlert={showAlert}/> \n              {/* </Route>\n          </Switch> */}\n          </div>\n      {/* </Router>  */}\n     </>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}